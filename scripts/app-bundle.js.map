{"version":3,"sources":["src/app.ts","src/environment.ts","src/home.ts","src/main.ts","src/components/deletabletimeline.ts","src/components/followedtweets.ts","src/components/home.ts","src/components/login.ts","src/components/logout.ts","src/components/profile.ts","src/components/settings.ts","src/components/signup.ts","src/components/timeline.ts","src/components/tweet.ts","src/components/userprofile.ts","src/components/viewuser.ts","src/components/viewusers.ts","src/resources/index.ts","src/services/async-http-client.ts","src/services/fixtures.ts","src/services/messages.ts","C:/workspace/enterprise-web-dev/my-tweet-web-client/src/services/models.js","src/services/tweet-service.ts"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["import { inject, Aurelia } from 'aurelia-framework';\nimport { RouterConfiguration, Router } from 'aurelia-router';\nimport { EventAggregator } from 'aurelia-event-aggregator';\nimport { LoginStatus } from './services/messages';\nimport { TweetService } from './services/tweet-service';\n\n@inject(Aurelia, EventAggregator, TweetService)\nexport class App {\n  router: Router;\n  au: Aurelia;\n  ts: TweetService;\n\n  constructor(au: Aurelia, ea: EventAggregator, ts: TweetService) {\n    this.au = au;\n    this.ts = ts;\n    ea.subscribe(LoginStatus, msg => {\n      this.router.navigate('/', { replace: true, trigger: false });\n      this.router.reset();\n      if (msg.status === true) {\n        au.setRoot('home');\n      } else {\n        au.setRoot('app');\n      }\n    });\n  }\n\n  configureRouter(config: RouterConfiguration, router: Router) {\n    config.map([\n      {\n        route: ['', 'login'],\n        name: 'login',\n        moduleId: 'components/login',\n        nav: true,\n        title: 'Login',\n      },\n      {\n        route: 'signup',\n        name: 'signup',\n        moduleId: 'components/signup',\n        nav: true,\n        title: 'Signup',\n      },\n    ]);\n    this.router = router;\n  }\n\n  attached() {\n    if (this.ts.isAuthenticated()) {\n      this.au.setRoot('home').then(() => {\n        this.router.navigateToRoute('home');\n      });\n    }\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import { RouterConfiguration, Router } from 'aurelia-router';\n\nexport class Home {\n  router: Router;\n\n  configureRouter(config: RouterConfiguration, router: Router) {\n    config.map([\n      {\n        route: ['', 'home'],\n        name: 'home',\n        moduleId: 'components/home',\n        nav: true,\n        title: 'Global Timeline',\n      },\n      {\n        route: 'followedtweets',\n        name: 'followedtweets',\n        moduleId: 'components/followedtweets',\n        nav: true,\n        title: 'Followed Timeline'\n      },\n      {\n        route: 'profile',\n        name: 'profile',\n        moduleId: 'components/profile',\n        nav: true,\n        title: 'My Profile',\n      },\n      {\n        route: 'userprofile/:id',\n        name: 'userprofile',\n        moduleId: 'components/userprofile',\n        nav: false,\n        title: 'Profile',\n      },\n      {\n        route: 'settings',\n        name: 'settings',\n        moduleId: 'components/settings',\n        nav: true,\n        title: 'Settings'\n      },\n      {\n        route: 'logout',\n        name: 'logout',\n        moduleId: 'components/logout',\n        nav: true,\n        title: 'Logout',\n      },\n    ]);\n    this.router = router;\n  }\n}\n","import { Aurelia } from 'aurelia-framework';\nimport environment from './environment';\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use.standardConfiguration().feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {inject} from 'aurelia-framework';\nimport {TweetService} from '../services/tweet-service';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {Tweet, User} from '../services/models';\nimport {ActiveUser, CurrentUser, Tweets} from \"../services/messages\";\n\n@inject(TweetService, EventAggregator)\nexport class Deletabletimeline {\n  tweetService: TweetService;\n  tweets: Array<Tweet>;\n  checkboxes: Array<string> = [];\n  user: User;\n\n  constructor(ts, ea) {\n    this.tweetService = ts;\n    ea.subscribe(Tweets, msg => {\n      this.tweets = msg.tweets;\n    });\n  }\n\n  deleteAll() {\n    for (let tweet of this.tweets) {\n      this.tweetService.deleteTweet(tweet._id);\n    }\n  }\n\n  deleteSelected() {\n    for (let id of this.checkboxes) {\n      this.tweetService.deleteTweet(id);\n    }\n  }\n}\n","import { inject } from 'aurelia-framework';\nimport { TweetService } from '../services/tweet-service';\nimport { EventAggregator } from 'aurelia-event-aggregator';\nimport {Tweet, User} from '../services/models';\nimport {Tweets} from \"../services/messages\";\n\n@inject(TweetService , EventAggregator)\nexport class Followedtweets {\n  tweets: Array<Tweet>;\n\n  constructor(ts, ea) {\n    ts.getFollowedTweets();\n  }\n}\n","import { inject } from 'aurelia-framework';\nimport { TweetService } from '../services/tweet-service';\n\n@inject(TweetService)\nexport class Home {\n  tweetService: TweetService;\n\n  activate() {\n    this.tweetService.getTweets();\n  }\n\n  constructor(ts: TweetService) {\n    this.tweetService = ts;\n    ts.getTweets();\n  }\n\n}\n","import { inject } from 'aurelia-framework';\nimport { TweetService } from '../services/tweet-service';\n\n@inject(TweetService)\nexport class Login {\n  tweetService: TweetService;\n  email = '';\n  password = '';\n\n  constructor(ts: TweetService) {\n    this.tweetService = ts;\n  }\n\n  login(e) {\n    console.log(`Trying to log in ${this.email}`);\n    this.tweetService.login(this.email, this.password);\n  }\n}\n","import { TweetService } from '../services/tweet-service';\nimport { inject } from 'aurelia-framework';\n\n@inject(TweetService)\nexport class Logout {\n  tweetService: TweetService;\n\n  constructor(ts: TweetService) {\n    this.tweetService = ts;\n  }\n\n  logout() {\n    console.log('logging out');\n    this.tweetService.logout();\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport {TweetService} from '../services/tweet-service';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {Tweet, User} from '../services/models';\nimport {ActiveUser, CurrentUser, Tweets} from \"../services/messages\";\n\n@inject(TweetService, EventAggregator)\nexport class Profile {\n  tweetService: TweetService;\n  eventAggregator: EventAggregator;\n  tweets: Array<Tweet>;\n\n  constructor(ts: TweetService, ea: EventAggregator) {\n\n    this.tweetService = ts;\n    this.eventAggregator = ea;\n    ts.getCurrentUser();\n    this.tweetService.getUsersTweets(ts.currentUser._id);\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport {TweetService} from '../services/tweet-service';\n\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {CurrentUser} from \"../services/messages\";\nimport {User} from \"../services/models\";\n\n@inject(TweetService, EventAggregator)\nexport class Settings {\n  tweetService: TweetService;\n  eventAggregator: EventAggregator;\n\n  currentUser: User;\n  firstName = '';\n  lastName = '';\n  email = ''\n  password = '';\n\n  constructor(ts, ea) {\n    this.tweetService = ts;\n    this.eventAggregator = ea;\n    ts.getCurrentUser();\n  }\n\n  attached() {\n    this.eventAggregator.subscribe(CurrentUser, msg => {\n      this.currentUser = msg.user;\n      this.firstName = this.currentUser.firstName;\n      this.lastName = this.currentUser.lastName;\n      this.email = this.currentUser.email;\n    });\n  }\n\n  update(e) {\n    this.currentUser.firstName = this.firstName;\n    this.currentUser.lastName = this.lastName;\n    this.currentUser.email = this.email;\n    this.currentUser.password = this.password;\n    this.tweetService.update(\n      this.currentUser\n    );\n  }\n}\n","import { inject } from 'aurelia-framework';\nimport { TweetService } from '../services/tweet-service';\n\n@inject(TweetService)\nexport class Signup {\n  tweetService: TweetService;\n\n  firstName = '';\n  lastName = '';\n  email = ''\n  password = '';\n\n  constructor(ts) {\n    this.tweetService = ts;\n  }\n\n  register(e) {\n    this.tweetService.register(\n      this.firstName,\n      this.lastName,\n      this.email,\n      this.password,\n    );\n    this.tweetService.login(this.email, this.password);\n  }\n}\n","import { inject } from 'aurelia-framework';\nimport { TweetService } from '../services/tweet-service';\nimport { EventAggregator } from 'aurelia-event-aggregator';\nimport {Tweet, User} from '../services/models';\nimport {Tweets} from \"../services/messages\";\n\n@inject(TweetService , EventAggregator)\nexport class Timeline {\n  tweets: Array<Tweet>;\n\n  constructor(ts, ea) {\n    ea.subscribe(Tweets, msg => {\n      this.tweets = msg.tweets;\n    });\n  }\n}\n","import { inject } from 'aurelia-framework';\nimport { TweetService } from '../services/tweet-service';\n\n@inject(TweetService)\nexport class Tweet {\n  tweetService: TweetService;\n  tweet = '';\n  image = [];\n\n  constructor(ts: TweetService) {\n    this.tweetService = ts;\n    this.tweet = this.tweet;\n  }\n\n  makeTweet() {\n    const reader = new FileReader();\n    reader.onload = () => {\n      let image = reader.result;\n      this.tweetService.tweet(this.tweet, image);\n    };\n\n    if (this.image[0]) {\n      reader.readAsDataURL(this.image[0]);\n    } else {\n      this.tweetService.tweet(this.tweet, null);\n    }\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport {TweetService} from '../services/tweet-service';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {Tweet, User} from '../services/models';\nimport {ActiveUser, CurrentUser, Tweets} from \"../services/messages\";\n\n@inject(TweetService, EventAggregator)\nexport class Userprofile {\n  tweetService: TweetService;\n  eventAggregator: EventAggregator;\n  tweets: Array<Tweet>;\n\n  activate(params) {\n      this.tweetService.getUsersTweets(params.id);\n      this.tweetService.getUser(params.id);\n  }\n\n  constructor(ts: TweetService, ea: EventAggregator) {\n\n    this.tweetService = ts;\n    this.eventAggregator = ea;\n  }\n}\n","import * as $ from 'jquery';\nimport {inject} from 'aurelia-framework';\nimport {TweetService} from '../services/tweet-service';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {User} from '../services/models';\nimport {ActiveUser, CurrentUser} from \"../services/messages\";\n\n@inject(TweetService, EventAggregator)\nexport class Viewuser {\n  user: User;\n  currentUser: User;\n  eventAggregator: EventAggregator;\n  tweetService: TweetService;\n  isFollowing: boolean = false;\n\n  attached() {\n    $('.ui .accordion')\n      .accordion({\n        selector: {\n          trigger: '.title'\n        }\n      });\n    this.updateFollowing();\n  }\n\n  constructor(ts, ea) {\n    this.tweetService = ts;\n    this.eventAggregator = ea;\n    ts.getCurrentUser();\n  }\n\n  followToggle() {\n    if (this.isFollowing) {\n      this.tweetService.unfollow(this.user);\n    } else {\n      this.tweetService.follow(this.user);\n    }\n    this.isFollowing = !this.isFollowing;\n  }\n\n  updateFollowing() {\n    this.isFollowing = false;\n    this.eventAggregator.subscribe(ActiveUser, msg => {\n      this.user = msg.user;\n      this.tweetService.getCurrentUser();\n      let following = false\n      for (let follower of this.user.followers) {\n        if (follower._id === this.tweetService.currentUser._id) {\n          following = true;\n        }\n      }\n      this.isFollowing = following;\n    });\n  }\n}\n","import { inject } from 'aurelia-framework';\nimport { TweetService } from '../services/tweet-service';\nimport {User} from '../services/models';\n\n@inject(TweetService)\nexport class Viewusers {\n  users: Array<User>;\n\n  constructor(ts) {\n    ts.getUsers();\n    this.users = ts.users;\n  }\n}\n","import { FrameworkConfiguration } from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n","import { inject } from 'aurelia-framework';\nimport { HttpClient } from 'aurelia-http-client';\nimport Fixtures from './fixtures';\nimport { EventAggregator } from 'aurelia-event-aggregator';\nimport { LoginStatus } from './messages';\n\n@inject(HttpClient, Fixtures, EventAggregator)\nexport default class AsyncHttpClient {\n  http: HttpClient;\n  ea: EventAggregator;\n\n  constructor(httpClient, fixtures, ea) {\n    this.http = httpClient;\n    this.http.configure(http => {\n      http.withBaseUrl(fixtures.baseUrl);\n    });\n    this.ea = ea;\n  }\n\n  isAuthenticated() {\n    let authenticated = false;\n    if (localStorage.tweeter !== 'null') {\n      authenticated = true;\n      this.http.configure(http => {\n        const auth = JSON.parse(localStorage.tweeter);\n        http.withHeader('Authorization', 'bearer ' + auth.token);\n      });\n    }\n    return authenticated;\n  }\n\n  authenticate(url: string, credentials: {email:string, password:string}) {\n    this.http\n      .post(url, credentials)\n      .then(response => {\n        const status = response.content;\n        if (status.success) {\n          localStorage.tweeter = JSON.stringify(response.content);\n          this.http.configure(configuration => {\n            configuration.withHeader(\n              'Authorization',\n              'bearer ' + response.content.token,\n            );\n          });\n        }\n        this.ea.publish(new LoginStatus(true));\n      })\n      .catch(error => {\n        this.ea.publish(new LoginStatus(false, 'service not available'));\n      });\n  }\n\n  clearAuthentication() {\n    localStorage.tweeter = null;\n    this.http.configure(configuration => {\n      configuration.withHeader('Authorization', '');\n    });\n  }\n\n  get(url: string) {\n    return this.http.get(url);\n  }\n\n\n  put(url: string, obj: any) {\n    return this.http.put(url, obj);\n  }\n\n  post(url: string, obj: any) {\n    return this.http.post(url, obj);\n  }\n\n  delete(url: string) {\n    return this.http.delete(url);\n  }\n}\n","export default class Fixtures {\n  baseUrl = 'http://54.246.244.111:4000';\n}\n","import {Tweet, User} from \"./models\";\n\nexport class Tweets{\n  tweets: Array<Tweet>;\n\n  constructor(tweets: Array<Tweet>){\n    this.tweets = tweets;\n  }\n}\n\nexport class CurrentUser {\n  user: User;\n\n  constructor(currentUser: User){\n    this.user = currentUser;\n  }\n}\n\nexport class ActiveUser {\n  user: User;\n\n  constructor(activeUser: User){\n    this.user = activeUser;\n  }\n}\n\nexport class LoginStatus {\n  status: boolean;\n  message: string;\n  constructor(status: boolean, message: string = '') {\n    this.status = status;\n    this.message = message;\n  }\n}\n",null,"import {inject} from 'aurelia-framework';\nimport AsyncHttpClient from './async-http-client';\nimport Fixtures from './fixtures';\nimport {ActiveUser, CurrentUser, LoginStatus, Tweets} from './messages';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {User, Tweet} from './models';\nimport * as moment from 'moment';\n\n@inject(Fixtures, EventAggregator, AsyncHttpClient)\nexport class TweetService {\n  ea: EventAggregator;\n  ac: AsyncHttpClient;\n  tweets: Array<Tweet> = [];\n  users: Map<string, User> = new Map();\n  currentUser: User;\n  user: User;\n\n  constructor(data: Fixtures, ea: EventAggregator, ac: AsyncHttpClient) {\n    this.ea = ea;\n    this.ac = ac;\n  }\n\n  isAuthenticated() {\n    return this.ac.isAuthenticated();\n  }\n\n  getCurrentUser() {\n    this.ac.get('/api/users/current').then(res => {\n      this.currentUser = res.content as User;\n      this.ac.get('/api/followers/' + this.currentUser._id).then(res2 => {\n        this.currentUser.followers = res2.content as Array<User>;\n      }).then(res => {\n          this.ac.get('/api/following/' + this.currentUser._id).then(res2 => {\n            this.currentUser.following = res2.content as Array<User>;\n          }).then(res => {\n            this.ea.publish(new CurrentUser(this.currentUser));\n          });\n        });\n    });\n  }\n\n  getUser(id) {\n    this.ac.get('/api/users/' + id).then(res => {\n      this.user = res.content as User;\n      this.ac.get('/api/followers/' + this.user._id).then(res2 => {\n        this.user.followers = res2.content as Array<User>;\n      }).then(res => {\n        this.ac.get('/api/following/' + this.user._id).then(res2 => {\n          this.user.following = res2.content as Array<User>;\n        }).then(res => {\n          this.ea.publish(new ActiveUser(this.user));\n        });\n      });\n    });\n  }\n\n  getUsers() {\n    this.ac.get('/api/users').then(res => {\n      const users = res.content as Array<User>;\n      users.forEach(user => {\n        this.ac.get('/api/followers/' + user._id).then(res2 => {\n          user.followers = res2.content as Array<User>;\n        });\n        this.ac.get('/api/following/' + user._id).then(res2 => {\n          user.following = res2.content as Array<User>;\n        });\n        this.users.set(user.email, user);\n      });\n      this.ea.publish(users);\n    });\n  }\n\n  getUsersTweets(id) {\n    let count = 0;\n    this.ea.publish(new Tweets([]));\n    this.ac.get('/api/users/' + id + '/tweets').then(res => {\n      this.tweets = res.content;\n      this.tweets.forEach(tweet => {\n        tweet.readableDate = moment(tweet.date).format('lll')\n        count++;\n        if (count == this.tweets.length) {\n          this.ea.publish(new Tweets(this.tweets));\n          console.log(this.tweets);\n        }\n      });\n    });\n  }\n\n  getTweets() {\n    this.ac.get(\"/api/tweets\").then(res => {\n      this.tweets = res.content;\n      this.tweets.forEach(tweet => {\n        tweet.readableDate = moment(tweet.date).format('lll');\n      })\n      this.ea.publish(new Tweets(this.tweets));\n    });\n  }\n\n  getFollowedTweets() {\n    this.ac.get(\"/api/tweets/followed\").then(res => {\n      this.tweets = res.content;\n      this.tweets.forEach(tweet => {\n        tweet.readableDate = moment(tweet.date).format('lll');\n      })\n      console.log(this.tweets);\n      this.ea.publish(new Tweets(this.tweets));\n    });\n  }\n\n  tweet(tweetmsg, image) {\n    const tweet = {\n      tweet: tweetmsg,\n      image: image\n    };\n    this.ac\n      .post('/api/tweets', tweet)\n      .then(res => {\n        let returnedTweet = res.content as Tweet;\n        returnedTweet.readableDate = moment(returnedTweet.date).format('lll');\n        this.tweets.unshift(returnedTweet);\n      });\n  }\n\n  deleteTweet(id: string) {\n    this.ac\n      .delete('/api/tweets/' + id)\n      .then(res => {\n        this.getUsersTweets(this.currentUser._id);\n      });\n  }\n\n  follow(user) {\n    const relationship = {\n      followee: user._id\n    }\n    this.ac\n      .post('/api/follow', relationship)\n      .then(res => {\n        this.getUser(user._id);\n      });\n  }\n\n  unfollow(user) {\n    this.ac\n      .delete('/api/follow/' + user._id)\n      .then(res => {\n        this.getUser(user._id);\n      });\n  }\n\n  register(firstName: string,\n           lastName: string,\n           email: string,\n           password: string,) {\n    const newUser = {\n      firstName: firstName,\n      lastName: lastName,\n      email: email,\n      password: password,\n    };\n    this.ac.post('/api/users', newUser).then(res => {\n\n    });\n  }\n\n  update(updatedUser) {\n    this.ac.put('/api/users', updatedUser).then(res => {\n      this.getUsers();\n    });\n  }\n\n  login(email: string, password: string) {\n    const user = {\n      email: email,\n      password: password,\n    };\n    this.ac.authenticate('/api/users/authenticate', user);\n  }\n\n  logout() {\n    this.ac.clearAuthentication();\n    this.ea.publish(new LoginStatus(false));\n  }\n}\n"],"sourceRoot":".."}